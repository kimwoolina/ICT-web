/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2020-12-22 08:01:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/member/../common/footer.jsp", Long.valueOf(1607581377049L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>first</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/first/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function validate(){\r\n");
      out.write("\t//유효성 검사 코드 작성함\r\n");
      out.write("\t//서버 컨트롤러로 전송할 값들이 요구한 조건을 모두 만족하였는지 검사하는 것\r\n");
      out.write("\r\n");
      out.write("\t//암호와 암호확인이 일치하지 않는지 확인함\r\n");
      out.write("\tvar pwdValue = document.getElementById(\"userpwd1\").value;\r\n");
      out.write("\tvar pwdValue2 = document.getElementById(\"userpwd2\").value;\r\n");
      out.write("\tif(pwdValue !== pwdValue2){\r\n");
      out.write("\t\talert(\"암호와 암호확인이 일치하지 않습니다. 다시 입력해 주세요.\");\r\n");
      out.write("\t\tdocument.getElementById(\"userpwd1\").select();\r\n");
      out.write("\t\treturn false;  //전송 취소함\r\n");
      out.write("\t} //if\r\n");
      out.write("\t\r\n");
      out.write("\treturn true;  //전송처리됨\r\n");
      out.write("}  //validate()\r\n");
      out.write("\r\n");
      out.write("//아이디 중복 체크 확인을 위한 ajax 실행 처리용 함수\r\n");
      out.write("function dupIdCheck(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/first/idchk\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: {userid : $(\"#userid\").val() },\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t//처리결과를 문자열로 받음\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\tif(data == \"ok\"){\r\n");
      out.write("\t\t\t\talert(\"사용 가능한 아이디입니다.\");\r\n");
      out.write("\t\t\t\t$(\"#userpwd\").focus();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"이미 사용중인 아이디입니다.\\n다시 입력하세요.\");\r\n");
      out.write("\t\t\t\t$(\"#userid\").select();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textstatus, errorthrown){\r\n");
      out.write("\t\t\t//에러 발생시 구동되는 콜백함수임\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus \r\n");
      out.write("\t\t\t\t\t+ \", \" + errorthrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<section>\r\n");
      out.write("<h1 align=\"center\">회원 가입 페이지</h1>\r\n");
      out.write("<br>\r\n");
      out.write("<form action=\"/first/enroll\" method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("<table id=\"outer\" align=\"center\" width=\"500\" cellspacing=\"5\" cellpadding=\"0\">\r\n");
      out.write("<tr><th colspan=\"2\">회원 정보를 입력해 주세요. (* 표시는 필수입력 항목입니다.)</th></tr>\r\n");
      out.write("<tr><th width=\"120\">*이 름</th>\r\n");
      out.write("\t<td><input type=\"text\" name=\"username\" required></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr><th width=\"120\">*아이디</th>\r\n");
      out.write("\t<td><input type=\"text\" name=\"userid\" id=\"userid\" required> &nbsp; \r\n");
      out.write("\t<input type=\"button\" value=\"중복체크\" onclick=\"dupIdCheck();\"></td></tr>\r\n");
      out.write("<tr><th width=\"120\">*암 호</th>\r\n");
      out.write("\t<td><input type=\"password\" name=\"userpwd\" id=\"userpwd1\" required></td></tr>\r\n");
      out.write("<tr><th width=\"120\">암호확인</th>\r\n");
      out.write("\t<td><input type=\"password\" id=\"userpwd2\"></td></tr>\r\n");
      out.write("<tr><th width=\"120\">*성 별</th>\r\n");
      out.write("\t<td>\t\r\n");
      out.write("\t\t<input type=\"radio\" name=\"gender\" value=\"M\" checked> 남자 &nbsp; \r\n");
      out.write("\t\t<input type=\"radio\" name=\"gender\" value=\"F\"> 여자\t\r\n");
      out.write("\t</td></tr>\r\n");
      out.write("<tr><th width=\"120\">*나 이</th>\r\n");
      out.write("\t<td><input type=\"number\" name=\"age\" min=\"19\" max=\"200\" required></td></tr>\r\n");
      out.write("<tr><th width=\"120\">*전화번호</th>\r\n");
      out.write("\t<td><input type=\"tel\" name=\"phone\" required></td></tr>\r\n");
      out.write("<tr><th width=\"120\">*이메일</th>\r\n");
      out.write("\t<td><input type=\"email\" name=\"email\" required></td></tr>\r\n");
      out.write("<tr><th width=\"120\">취 미</th>\r\n");
      out.write("\t<td>\r\n");
      out.write("\t\t<table width=\"350\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"game\"> 게임</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"reading\"> 독서</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"climb\"> 등산</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"sport\"> 운동</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"music\"> 음악듣기</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"movie\"> 영화보기</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"travel\"> 여행</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"cook\"> 요리</td>\r\n");
      out.write("\t\t\t<td><input type=\"checkbox\" name=\"hobby\" value=\"etc\"> 기타</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</table>\t\r\n");
      out.write("\t</td></tr>\r\n");
      out.write("<tr><th width=\"120\">하고 싶은 말</th>\r\n");
      out.write("\t<td><textarea name=\"etc\" rows=\"5\" cols=\"50\"></textarea></td></tr>\r\n");
      out.write("<tr><th width=\"120\" colspan=\"2\">\r\n");
      out.write("\t<a href=\"javascript:history.go(-1);\">이전 페이지로 이동</a> &nbsp; \r\n");
      out.write("\t<input type=\"submit\" value=\"가입하기\"> &nbsp; \r\n");
      out.write("\t<input type=\"reset\" value=\"작성취소\">\r\n");
      out.write("</th></tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</section>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("footer {\r\n");
      out.write("\tbackground : gray;\r\n");
      out.write("\ttext-align : center;\r\n");
      out.write("\twidth : 100%;\r\n");
      out.write("\theight : 60px;\r\n");
      out.write("\tfont-size : 0.8em;\r\n");
      out.write("\tfont-weight : bold;\r\n");
      out.write("\tpadding-top : 10px;\r\n");
      out.write("\ttext-shadow: 1px 1px 2px white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr { clear : both; }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("copyright@ict.or.kr &nbsp; 관리자 메일 : master@ict.or.kr &nbsp; 2020-12-10 <br>\r\n");
      out.write("Tel : 02-12345678, Fax : 02-1234-5679\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
